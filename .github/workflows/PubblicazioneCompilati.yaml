name: Pubblicazione dei documenti LaTeX compilati
on: workflow_dispatch 
jobs:
    pubblicazione_compilati:
      env: 
        # ELEM_TO_MAINTAIN: contiene i nomi dei file compilati separati da spazio che non devono essere sovrascritti dalla pubblicazione perchÃ¨ firmati dal proponente
        # ELEM_TO_DEL: contiene i nomi dei file sorgente separati da spazio che non devono essere pubblicati 
        # SRC: nome directory di destinazione della clonazione del repo dei file sorgenti
        # CMP: nome directory di destinazione della clonazione del repo dei file compilati
        ELEM_TO_MAINTAIN: ${{vars.ELEM_TO_MAINTAIN}}
        ELEM_TO_DEL: ${{vars.ELEM_TO_DEL}}
        SRC: "src"
        CMP: "cmp"
          
      runs-on: ubuntu-latest
      steps:
        - name: Clona repo documenti sorgente
          uses: actions/checkout@v4
          with:
            path: ${{ env.SRC }}

        - name: Clona repo documenti compilati
          uses: actions/checkout@v4
          with:
            repository: Pedro-Leonii/Documentazione
            path: ${{ env.CMP }}
            token: ${{ secrets.FORK_TOKEN  }}

        # Definisce due regex che mettono in OR rispettivamente i file sorgenti da eliminare dopo la compilazione e i file compilati da non aggiornare 
        - name: Definizione regex 
          id: regex
          run: |
            echo "REGEX_TO_DEL=$(echo "$ELEM_TO_DEL" | sed 's/ /\\|/g')" >> $GITHUB_OUTPUT 
            echo "REGEX_TO_MAINTAIN=$(echo "$ELEM_TO_MAINTAIN" | sed 's/ /\\|/g')" >> $GITHUB_OUTPUT 
            
        # Seleziona i documenti contenuti nella repo dei documenti sorgente che devono essere aggioranti nella repo dei documenti pubblicati
        - name: Selezione documenti sorgente per compilazione
          id: select_files
          run: |
            TO_COMPILE=$(find $SRC -type f -name "*.tex" \
            | grep -v "${{ steps.regex.outputs.REGEX_TO_DEL }}" \
            | grep -v "${{ steps.regex.outputs.REGEX_TO_MAINTAIN }}")
            
            echo "TEX_FILES<<EOF" >> $GITHUB_OUTPUT
            echo $TO_COMPILE >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

        # Compila i documenti contenuti nella repo dei documenti sorgente che devono essere aggiornati nella repo dei documenti pubblicati  
        - name: Compilazione
          uses: xu-cheng/latex-action@v3
          with:
            work_in_root_file_dir: true
            root_file: |
              ${{ steps.select_files.outputs.TEX_FILES }}
          env:
            TEXINPUTS: "/home/runner/work/SorgentiDocumentazione/SorgentiDocumentazione/${{env.SRC}}/Packages:"

        # Elimina i file indicati nella variabile ELEM_TO_DEL e quelli generati dalla compilazione 
        - name: Pulizia dopo la compilazione
          run: |
            rm -rf $( find $SRC -type d -not -path '*/.*' | grep "${{steps.regex.outputs.REGEX_TO_DEL}}")
            find $SRC -type f -not -path '*/*.pdf' -delete

        # Elimina i documenti contenuti nella repo documenti compilati che devono essere aggiornati 
        - name: Pulizia repo documenti compilati 
          run:  rm $(find $CMP -type f -path '*/*.pdf' | grep -v "${{steps.regex.outputs.REGEX_TO_MAINTAIN}}")

        # Copia i file compilati che devono essere aggiornati nella repo documenti pubblicati
        - name: Aggiornamento repo documenti compilati
          run: |
            FILES_TO_COPY=$(find $SRC -type f -not -path '*/.*')
            
            for file in $FILES_TO_COPY; do
                cp -r $file $(echo $file | sed "s/$SRC/$CMP/g") 
            done
        
        - name: Commit repo documenti compilati
          uses: EndBug/add-and-commit@v9
          with:
            cwd: $DST
