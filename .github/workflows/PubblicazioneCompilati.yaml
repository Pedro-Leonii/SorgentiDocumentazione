name: Pubblicazione dei documenti LaTeX compilati
on: workflow_dispatch 
jobs:
    pubblicazione_compilati:
      env: 
        DIRS_TO_IGNORE: ${{vars.DIR_TO_IGNORE_FORK}}
        DIRS_TO_DEL: ${{vars.DIR_TO_DEL_FORK}}
          
      runs-on: ubuntu-latest
      steps:
        - name: Clona la repository dei documenti sorgenti
          uses: actions/checkout@v4
          with:
            path: src

        - name: Clona la repository dei documenti compilati
          uses: actions/checkout@v4
          with:
            repository: Pedro-Leonii/Documentazione
            path: dst
            token: ${{ secrets.FORK_TOKEN  }}

        - name: Prepara mette le directory da eliminare e da ignorare in OR
          id: dirs
          run: |
            echo "TO_DEL=$(echo "$DIRS_TO_DEL" | sed 's/ /\\|/g')" >> $GITHUB_OUTPUT 
            echo "TO_IGNORE=$(echo "$DIRS_TO_IGNORE" | sed 's/ /\\|/g')" >> $GITHUB_OUTPUT 
        
        - name: Seleziona i documenti da compilare
          id: setup_tex
          run: |
            TO_COMPILE=$(find -type f -name "*.tex" \
            | grep -v "${{ steps.dirs.outputs.TO_DEL }}" \
            | grep -v "${{ steps.dirs.outputs.TO_IGNORE }}")
            
            echo "TEX_PATH<<EOF" >> $GITHUB_OUTPUT
            echo $TO_COMPILE >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
              
        - name: Compila i documenti
          uses: xu-cheng/latex-action@v3
          with:
            work_in_root_file_dir: true
            root_file: |
              ${{ steps.setup_tex.outputs.TEX_PATH }}
            post_compile: 'find * -type f ! -name "*.pdf" -delete'
          env:
            TEXINPUTS: "/home/runner/work/SorgentiDocumentazione/SorgentiDocumentazione/src/Packages:"
          
        - name: Elimina le directory che non devono essere pubblicate
          run: |
            rm -rf $( find . -type -f | grep "${{steps.dirs.outputs.TO_DEL}}")
              
        - name: Muove le cartelle da ignorare da dst a src
          run: |
            PATHS_FROM_DST=$(find dst -type f -not -path '*/.*' | grep "${{steps.dirs.outputs.TO_IGNORE}}")

            for path in $PATHS_FROM_DST; do
              cp -r $path $(echo $path | sed 's/dst/src/g')
            done

        - name: Copia i file da src a dst
          run: |
              find dst -name "*.pdf" -type f -delete
              cp -r src/* dst/
              tree -a
        
        - name: Commit dei documenti compilati
          uses: EndBug/add-and-commit@v9
          with:
            cwd: dst
